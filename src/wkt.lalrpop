// Document: Simple Feature Access - Part 1: Common Architecture
// Version: 1.2.1
// Document #: 06-103r4
// Sections: 7.2

use std::str::FromStr;
use std::iter;
use ::Geometry as New;
use {
    PointType,
    LineStringType,
    PolygonType,
    MultiPointType,
    PolyhedralSurfaceType,
    MultiLineStringType,
    MultiPolygonType,
    GeometryCollectionType,
};

// TODO: case insensitivity

grammar;

//FIXME: https://github.com/nikomatsakis/lalrpop/issues/97
//FIXME: closely follow spec here
//Float: f64 = r"[+-]?([0-9]+(.[0-9]*)?|.[0-9]+)([eE][+-]?[0-9]+)?" => f64::from_str(<>).unwrap();
Float: f64 = r"[+-0123456789eE.]+" => f64::from_str(<>).unwrap();

// FIXME: whitespace around comma should be optional
Comma<T>: Vec<T> = {
    <h:(<T> ",")*> <t:T> =>
        h.into_iter().chain(iter::once(t)).collect()
};

EmptySet = "EMPTY";

LeftParen = "(";

RightParen = ")";

Point: (f64, f64) = <x:Float> <y:Float> => (x, y);

pub GeometryTaggedText = {
    PointTaggedText,
    LineStringTaggedText,
    PolygonTaggedText,
    TriangleTaggedText,
    PolyhedralSurfaceTaggedText,
    TinTaggedText,
    MultiPointTaggedText,
    MultiLineStringTaggedText,
    MultiPolygonTaggedText,
    GeometryCollectionTaggedText,
};

PointTaggedText: New =
    "POINT" <PointText> => New::Point(<>);

LineStringTaggedText: New =
    "LINESTRING" <LineStringText> => New::LineString(<>);

PolygonTaggedText: New =
    "POLYGON" <PolygonText> => New::Polygon(<>);

PolyhedralSurfaceTaggedText: New =
    "POLYHEDRALSURFACE" <PolyhedralSurfaceText> => New::PolyhedralSurface(<>);

TriangleTaggedText: New =
    "TRIANGLE" <PolygonText> => New::Triangle(<>);

TinTaggedText: New =
    "TIN" <PolyhedralSurfaceText> => New::Tin(<>);

MultiPointTaggedText: New =
    "MULTIPOINT" <MultiPointText> => New::MultiPoint(<>);

MultiLineStringTaggedText: New =
    "MULTILINESTRING" <MultiLineStringText> => New::MultiLineString(<>);

MultiPolygonTaggedText: New =
    "MULTIPOLYGON" <MultiPolygonText> => New::MultiPolygon(<>);

GeometryCollectionTaggedText: New =
    "GEOMETRYCOLLECTION" <GeometryCollectionText> => New::GeometryCollection(<>);

PointText: PointType = {
    EmptySet => None,
    LeftParen <Point> RightParen => Some(<>),
};

LineStringText = {
    EmptySet => vec![],
    LeftParen <Comma<Point>> RightParen,
};

PolygonText = {
    EmptySet => vec![],
    LeftParen <Comma<LineStringText>> RightParen,
};

PolyhedralSurfaceText = {
    EmptySet => vec![],
    LeftParen <Comma<PolygonText>> RightParen,
};

MultiPointText = {
    EmptySet => vec![],
    LeftParen <Comma<PointText>> RightParen,
};

MultiLineStringText = {
    EmptySet => vec![],
    LeftParen <Comma<LineStringText>> RightParen,
};

MultiPolygonText = {
    EmptySet => vec![],
    LeftParen <Comma<PolygonText>> RightParen,
};

GeometryCollectionText = {
    EmptySet => vec![],
    LeftParen <Comma<GeometryTaggedText>> RightParen,
};
