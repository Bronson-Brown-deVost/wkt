// http://svn.osgeo.org/postgis/trunk/doc/bnf-wkt.txt

use std::str::FromStr;
use ::New;

grammar;

//FIXME: https://github.com/nikomatsakis/lalrpop/issues/97
//Float: f64 = r"[+-]?([0-9]+(.[0-9]*)?|.[0-9]+)([eE][+-]?[0-9]+)?" => f64::from_str(<>).unwrap();

Float: f64 = r"[+-0-9eE.]+" => f64::from_str(<>).unwrap();

Comma<T>: Vec<T> = {
    <h:(<T> ",")*> <t:T?> =>
        h.into_iter().chain(t).collect()
};

pub WellKnownTextRepresentation: New = {
    PointTextRepresentation => New::Point(<>),
    CurveTextRepresentation => New::LineString(<>),
};

PointTextRepresentation = "POINT" <PointText>;

CurveTextRepresentation =   {
    LineStringTextRepresentation,
};

LineStringTextRepresentation = "LINESTRING" <LineStringTextBody>;

LineStringTextBody = LineStringText;

PointText: Option<(f64, f64)> = {
    "EMPTY" => None,
    "(" <p:Point> ")" => Some(p),
};

Point: (f64, f64) = <x:Float> <y:Float> => (x, y);

LineStringText: Option<Vec<(f64, f64)>> = {
    "EMPTY" => None,
    "(" <p:Comma<Point>> ")" => Some(p),
};
